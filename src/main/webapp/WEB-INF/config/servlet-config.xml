<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- sirve para indicar que se van a usar anotaciones -->
	<mvc:annotation-driven />
	<!-- sirve para indicar el lugar donde se van a encontrar los controladores -->
	<context:component-scan	base-package="com.pluralsight.controller" />
	<context:component-scan	base-package="com.pluralsight.services" />

<!-- todo este super bean sirve para mapear json y xml diretamente desde las clases que tengan un para hacer servicios web  -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="contentNegotiationManager">
			<bean
				class="org.springframework.web.accept.ContentNegotiationManager">
				<constructor-arg>
					<bean
						class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<constructor-arg>
							<map>
								<entry key="json" value="application/json"></entry>
								<entry key="xml" value="application/xl"></entry>
							</map>
						</constructor-arg>
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
							<property name="autodetectAnnotations" value="true"/>
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>

	<!-- con esto indicamos una location statica para servir archivos sin tgener 
		que pasa un requetMapping, etc -->
	<mvc:resources location="pdfs" mapping="/pdfs/**" />

	<!-- interceptor para cambiar el idioma seleccionado el paramName es el 
		paramtro en la url -->
	<mvc:interceptors>
		<bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
			p:paramName="idioma" />
	</mvc:interceptors>

	<!-- bean usado simplemente para que sping sepa cual locale usar en un prinncipio -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver"
		p:defaultLocale="es"></bean>

	<!-- bean usado para setear un archivo de propiedades de textos comunmente 
		usado en internacionalizaciÃ³n -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="messages" />


	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/jsp/"/> <property name="suffix" value=".jsp"/> 
		</bean> -->

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

</beans>
